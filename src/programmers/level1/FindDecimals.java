package programmers.level1;

public class FindDecimals {
    public int solution(int n) {
        int answer = n-1;
        for(int i=2;i<=n;i++) {
            for(int j=2; j*j<=i; j++){
                if(i%j==0) {
                    answer--;
                    break;
                }
            }
        }
        return answer;
    }
}
/*
    개인 해설
    n 까지의 수 중에 소수의 갯수를 찾는 문제입니다.
    이중 for문을 이용하며 2 ~ n 까지 비교하며 풀게되면 효율성에서 탈락하게 됩니다.
    '에라토스테네스의 채'를 이용하여 해결하였습니다.
    1은 소수가 아니기 때문에 전체 소수 갯수(answer) -1을 미리 해주고, 수의 제곱근보다 작을 때까지만 비교하여 비교 범위를 낮췄습니다.
    '2로 나눠지는 건 4로도 나눠진다.'는 의미를 생각했다면 쉽게 다가갈 수 있는 문제인 것 같습니다.
    생각보다 시간을 많이 쓴 문제입니다.

 */
/*
    문제
    programmers - 연습문제 - 소수 찾기
    https://programmers.co.kr/learn/courses/30/lessons/12921

문제 설명
1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.
소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.
(1은 소수가 아닙니다.)

제한 조건
n은 2이상 1000000이하의 자연수입니다.

입출력 예
n	result
10	4
5	3

입출력 예 설명
입출력 예 #1
1부터 10 사이의 소수는 [2,3,5,7] 4개가 존재하므로 4를 반환
입출력 예 #2
1부터 5 사이의 소수는 [2,3,5] 3개가 존재하므로 3를 반환

 */