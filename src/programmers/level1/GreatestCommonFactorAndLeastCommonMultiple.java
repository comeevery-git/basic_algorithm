package programmers.level1;

public class GreatestCommonFactorAndLeastCommonMultiple {
    public int[] solution(int n, int m) {
        int gcd = 0;
        for(int i=1; i<=m; i++) {
            if(n%i==0 && m%i==0) {
                gcd = i;
            }
        }

        return new int[]{gcd, n*m/gcd};
    }
}

/*
    개인 해설
    유클리드 알고리즘(유클리드 호제법)을 통해 풀이하였습니다.
        * 유클리드 알고리즘
        2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a>b), a와 b의 최대공약수는 b와 r의 최대공약수와 같다.
        이 성질에 따라, b를 r로 나눈 나머지 r’를 구하고, 다시 r을 r’로 나눈 나머지를 구하는 과정을 반복하여 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.
        이는 명시적으로 기술된 가장 오래된 알고리즘으로서도 알려져 있으며, 기원전 300년경에 쓰인 유클리드의 《원론》 제7권, 명제 1부터 3까지에 해당한다.
    두 수의 최대공약수(최대 나누어 떨어지는 수), 최소공배수(최소 공통인 배수)를 구하여 리턴하였습니다.

 */
/*
    문제
    programmers - 연습문제 - 최대공약수와 최소공배수
    https://programmers.co.kr/learn/courses/30/lessons/12940

최대공약수와 최소공배수
문제 설명
두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요.
배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다.
예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.

제한 사항
두 수는 1이상 1000000이하의 자연수입니다.

입출력 예
n	m	return
3	12	[3, 12]
2	5	[1, 10]

입출력 예 설명
입출력 예 #1
위의 설명과 같습니다.
입출력 예 #2
자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 [1, 10]을 리턴해야 합니다.

 */